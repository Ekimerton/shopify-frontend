{"version":3,"sources":["App.js","index.js"],"names":["require","config","Step","Steps","Meta","Card","App","useState","loading","setLoading","query","setQuery","searchResults","setSearchResults","usePersistedState","nominated","setNominated","nominationCount","setNominationCount","key","defaultValue","JSON","parse","localStorage","getItem","state","setState","useEffect","setItem","stringify","MovieDetail","props","movieNominated","body","imdbID","Item","avatar","alt","src","Poster","height","width","title","Title","description","Year","type","disabled","onClick","NominationDetail","style","cover","actions","axios","get","params","apikey","process","s","trim","then","res","data","Response","Search","catch","err","addNomination","newNominated","notification","message","deleteNomination","className","headStyle","fontSize","textAlign","href","size","current","getProgressIndex","justifyContent","alignItems","wrap","Object","entries","map","nominee","placeholder","allowClear","value","onChange","event","target","marginBottom","dataSource","locale","emptyText","renderItem","searchResult","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4ec5f11.chunk.js","sourcesContent":["import './App.css';\nimport { Input, Button, Steps, Spin, notification, Card, Space, List } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nrequire('dotenv').config()\n\nconst { Step } = Steps;\nconst { Meta } = Card;\nconst api_key = process.env.REACT_APP_OMDB_API\n\nfunction App() {\n  // App States\n  const [loading, setLoading] = useState(false);\n  const [query, setQuery] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [nominated, setNominated] = usePersistedState(\"nominated\", {});\n  const [nominationCount, setNominationCount] = usePersistedState(\"nominatedCount\", 0);\n\n  //Persistant States using LocalStorage\n  function usePersistedState(key, defaultValue) {\n    const [state, setState] = useState(\n      () => JSON.parse(localStorage.getItem(key)) || defaultValue\n    );\n    useEffect(() => {\n      localStorage.setItem(key, JSON.stringify(state));\n    }, [key, state]);\n    return [state, setState];\n  }\n\n  // Notifications\n  const successNotification = () => {\n    notification[\"success\"]({\n      message: 'Nominations Complete',\n      description:\n        'You have successfully nominated five movies! Scroll up to adjust nominations or confirm final picks.',\n    });\n  };\n\n  // Sub-components\n  function MovieDetail(props) {\n    const movieNominated = props.body.imdbID in nominated;\n    return (\n      <List.Item>\n        <List.Item.Meta\n          avatar={<img alt=\"missing poster\" src={props.body.Poster} height={100} width={70} />}\n          title={props.body.Title}\n          description={props.body.Year}\n        />\n        <Button type=\"primary\" disabled={movieNominated || nominationCount >= 5} onClick={() => props.onClick(props.body)}>\n          Nominate\n          </Button>\n      </List.Item>\n    )\n  }\n\n  function NominationDetail(props) {\n    return (\n      <Card\n        style={{ width: 200 }}\n        cover={\n          <img alt=\"missing poster\" src={props.body.Poster} height={250} />\n        }\n        actions={[\n          <Button type=\"primary\" onClick={() => props.onClick(props.body)}>\n            Remove\n          </Button>\n        ]}\n      >\n        <Meta title={props.body.Title} description={props.body.Year} />\n      </Card>\n    )\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    axios.get(`https://www.omdbapi.com`,\n      {\n        params: {\n          apikey: api_key,\n          type: \"movie\",\n          s: query.trim()\n        }\n      }).then(res => {\n        if (res.data.Response !== \"False\") {\n          setSearchResults(res.data.Search);\n        } else {\n          setSearchResults([]);\n        }\n        setLoading(false);\n      }).catch(err => {\n        setSearchResults([]);\n        setLoading(false);\n      })\n  }, [query]);\n\n  const addNomination = (body) => {\n    var newNominated = { ...nominated }\n    newNominated[body.imdbID] = body;\n    setNominated(newNominated);\n    if (nominationCount >= 4) {\n      successNotification();\n    }\n    setNominationCount(nominationCount + 1);\n  }\n\n  const deleteNomination = (body) => {\n    var newNominated = { ...nominated }\n    delete newNominated[body.imdbID]\n    setNominated(newNominated);\n    setNominationCount(nominationCount - 1);\n  }\n\n  const getProgressIndex = () => {\n    switch (nominationCount) {\n      case 0:\n        return 0;\n      case 5:\n        return 3;\n      default:\n        return 1;\n    }\n  }\n\n  return (\n    <div>\n      <body className=\"App-body\">\n\n        <Card className=\"App-compartment\" title=\"The Shoppies ðŸŽ¬\" headStyle={{ fontSize: 24, textAlign: \"center\" }}>\n          <p>\n            Hi! My name is <a href={\"https://www.linkedin.com/in/ekim-karabey/\"}>Ekim</a> and this is my entry for the Spotify 2021 Fall Internship coding challenge. In case you stumble upon this by accident and are confused, the guidelines for the challenge are <a href={\"https://docs.google.com/document/d/1SdR9rQpocsH5rPTOcxr9noqHRld5NJlylKO9Hf94U8U\"}>here</a>. All of the code for this project can be found on <a href={\"https://github.com/Ekimerton/shopify-frontend\"}>Github</a>.\n          </p>\n          <p>\n            You can start by searching for any movies within the OMDB database using the search card at the bottom. Once you find movies you like, you can save up to five as your nominations. Your nominations will persist even after you leave the webpage and come back at a later date.\n          </p>\n          <Steps size=\"small\" current={getProgressIndex()}>\n            <Step title=\"Search OMDB\" />\n            <Step title={(5 - nominationCount) + \" Nominations Left\"} />\n            <Step title=\"Nominations Complete\" />\n          </Steps>\n        </Card>\n\n        <Card className=\"App-compartment\" title=\"Nominations\" headStyle={{ fontSize: 24, textAlign: \"center\", justifyContent: \"center\", alignItems: \"center\" }}>\n          <Space size={[16, 16]} wrap style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n            {Object.entries(nominated).map(nominee => (\n              <NominationDetail body={nominee[1]} onClick={deleteNomination} />\n            ))}\n          </Space>\n        </Card>\n\n\n        <Card className=\"App-compartment\" title=\"Search\" headStyle={{ fontSize: 24, textAlign: \"center\" }}>\n          <h3> Movie Title:</h3>\n          <Input\n            placeholder=\"Enter movie title here!\"\n            loading={loading}\n            allowClear\n            size=\"large\"\n            value={query}\n            onChange={event => setQuery(event.target.value)}\n            style={{ marginBottom: 20 }}\n          />\n          {query !== \"\" && !loading && <h3>Showing results for: {query}</h3>}\n          <List\n            style={{ width: '100%', justifyContent: 'center' }}\n            dataSource={searchResults}\n            loading={loading}\n            locale={{ emptyText: query === \"\" ? \"Your Search Results Go Here!\" : \"No Search Results\" }}\n            renderItem={searchResult => (\n              <MovieDetail body={searchResult} onClick={addNomination} />\n            )}\n          />\n        </Card>\n      </body>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"antd/dist/antd.css\";\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}