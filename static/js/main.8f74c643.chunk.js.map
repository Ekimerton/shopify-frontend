{"version":3,"sources":["App.js","index.js"],"names":["require","config","Step","Steps","Meta","Card","App","useState","loading","setLoading","query","setQuery","searchResults","setSearchResults","usePersistedState","nominated","setNominated","nominationCount","setNominationCount","key","defaultValue","JSON","parse","localStorage","getItem","state","setState","useEffect","setItem","stringify","MovieDetail","props","movieNominated","body","imdbID","cover","alt","src","Poster","height","actions","type","disabled","onClick","title","Title","description","Year","NominationDetail","addNomination","newNominated","notification","message","deleteNomination","className","headStyle","fontSize","textAlign","size","current","getProgressIndex","placeholder","allowClear","value","onChange","val","event","curr_query","target","curr","a","axios","get","params","apikey","process","s","then","res","console","log","data","Response","Search","catch","err","loadInfo","onType","style","marginBottom","width","justifyContent","alignItems","gutter","map","searchResult","span","Object","entries","nominee","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f74c643.chunk.js","sourcesContent":["import './App.css';\nimport { Input, Button, Row, Col, Steps, Spin, notification, Card, Avatar } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nrequire('dotenv').config()\n\nconst { Step } = Steps;\nconst { Meta } = Card;\nconst api_key = process.env.REACT_APP_OMDB_API\n// axios.defaults.withCredentials = true;\n\nfunction App() {\n  // App States\n  const [loading, setLoading] = useState(false);\n  const [query, setQuery] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [nominated, setNominated] = usePersistedState(\"nominated\", {});\n  const [nominationCount, setNominationCount] = usePersistedState(\"nominatedCount\", 0);\n\n  //Persistant States using LocalStorage\n  function usePersistedState(key, defaultValue) {\n    const [state, setState] = useState(\n      () => JSON.parse(localStorage.getItem(key)) || defaultValue\n    );\n    useEffect(() => {\n      localStorage.setItem(key, JSON.stringify(state));\n    }, [key, state]);\n    return [state, setState];\n  }\n\n  // Notifications\n  const successNotification = () => {\n    notification[\"success\"]({\n      message: 'Nominations Complete',\n      description:\n        'You have successfully nominated five movies! Scroll down to adjust nominations or share final picks.',\n    });\n  };\n\n  // Sub-components\n  function MovieDetail(props) {\n    const movieNominated = props.body.imdbID in nominated;\n    return (\n      <Card\n        cover={<img alt=\"missing poster\" src={props.body.Poster} height={300} />}\n        actions={[\n          <Button type=\"primary\" disabled={movieNominated || nominationCount >= 5} onClick={() => props.onClick(props.body)}>\n            Nominate\n          </Button>\n        ]}\n      >\n        <Meta title={props.body.Title} description={props.body.Year} />\n      </Card>\n    )\n  }\n\n  function NominationDetail(props) {\n    return (\n      <Card\n        cover={<img alt=\"missing poster\" src={props.body.Poster} height={300} />}\n        actions={[\n          <Button type=\"primary\" onClick={() => props.onClick(props.body)}>\n            Remove\n          </Button>\n        ]}\n      >\n        <Meta title={props.body.Title} description={props.body.Year} />\n      </Card>\n    )\n  }\n\n  const onType = (event) => {\n    const curr_query = event.target.value;\n    setQuery(curr_query);\n    const loadInfo = async (curr) => {\n      setLoading(true);\n      axios.get(`https://www.omdbapi.com`,\n        {\n          params: {\n            apikey: api_key,\n            type: \"movie\",\n            s: curr_query\n          }\n        }).then(res => {\n          console.log(res);\n          if (res.data.Response !== \"False\") {\n            setSearchResults(res.data.Search);\n          } else {\n            setSearchResults([]);\n          }\n          setLoading(false);\n        }).catch(err => {\n          console.log(err);\n          setSearchResults([]);\n          setLoading(false);\n        })\n    }\n    loadInfo(query);\n  }\n\n  const addNomination = (body) => {\n    var newNominated = { ...nominated }\n    newNominated[body.imdbID] = body;\n    setNominated(newNominated);\n    if (nominationCount >= 4) {\n      successNotification();\n    }\n    setNominationCount(nominationCount + 1);\n  }\n\n  const deleteNomination = (body) => {\n    var newNominated = { ...nominated }\n    delete newNominated[body.imdbID]\n    setNominated(newNominated);\n    setNominationCount(nominationCount - 1);\n  }\n\n  const getProgressIndex = () => {\n    switch (nominationCount) {\n      case 0:\n        return 0;\n      case 5:\n        return 2;\n      default:\n        return 1;\n    }\n  }\n\n  return (\n    <div>\n      <body className=\"App-body\">\n\n        <Card className=\"App-compartment\" title=\"The Shoppies\" headStyle={{ fontSize: 24, textAlign: \"center\" }}>\n          <p> Hello, this is my entry in the spotty awards. To use this service, either use the search component to look for films, or the nominations component to manage nominations. </p>\n          <Steps size=\"small\" current={getProgressIndex()}>\n            <Step title=\"Search OMDB\" />\n            <Step title={nominationCount == 5 ? \"Nominations Complete!\" : (5 - nominationCount) + \" Nominations Left\"} />\n            <Step title=\"Evaluate Picks and Share\" />\n          </Steps>\n        </Card>\n\n        <Card className=\"App-compartment\" title=\"Search\" headStyle={{ fontSize: 24, textAlign: \"center\" }}>\n          <h3> Movie Title:</h3>\n          <Input\n            placeholder=\"Enter movie title here!\"\n            loading={loading}\n            allowClear\n            size=\"large\"\n            value={query}\n            onChange={val => onType(val)}\n            style={{ marginBottom: 20 }}\n          />\n          {query !== \"\" && !loading && <h3>Showing results for: {query}</h3>}\n          {loading &&\n            <div style={{ width: \"100%\", justifyContent: \"center\", alignItems: \"center\" }}>\n              <Spin />\n            </div>\n          }\n          <Row gutter={16} style={{ alignItems: \"center\", justifyContent: \"center\" }}>\n            {!loading && searchResults.map(searchResult => (\n              <Col span={6} style={{ marginBottom: 15 }}>\n                <MovieDetail body={searchResult} onClick={addNomination} />\n              </Col>\n            ))}\n          </Row>\n        </Card>\n\n        <Card className=\"App-compartment\" title=\"Nominations\" headStyle={{ fontSize: 24, textAlign: \"center\" }}>\n          <Row gutter={16} style={{ alignItems: \"center\", justifyContent: \"center\" }}>\n            {Object.entries(nominated).map(nominee => (\n              <Col span={6} style={{ marginBottom: 15 }}>\n                <NominationDetail body={nominee[1]} onClick={deleteNomination} />\n              </Col>\n            ))}\n          </Row>\n        </Card>\n\n      </body>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"antd/dist/antd.css\";\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}